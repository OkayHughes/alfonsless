function basis = monomial_basis(num_variables, max_degree, var_name)
    %Takes:
    %   num_variables: integer
    %       number of variables over which the polynomials can
    %       be expressed
    %   max_degree: integer
    %       the maximum degree of polynomials in the
    %       space we're generating a basis for
    %   var_name:
    %       string to be used as the variable name
    %Returns:
    %   basis: struct
    %       basis.n: integer
    %           number of variables in the polynomial
    %       basis.d:
    %           highest degree of the monomial
    %       basis.number_monomials
    
    %       basis.variables: mss
    %           num_variables x 1 vector of free msspoly
    %           variables, the output of msspoly(var_name, num_variables)
    %       basis.monomials: msspoly variable vector
    %           nchoosek(max_degree + num_variables, max_degree)
    %           x 1 vector of msspoly monomials, the output of 
    %           monomials(basis.variables, 0:max_degree)
    %       basis.power_matrix: real matrix
    %           nchoosek(max_degree + num_variables, max_degree) x n matrix
    %           A, the output of monomials_to_matrix(basis.monomials,
    %           basis.variables).
    basis.variables = msspoly(var_name, num_variables);
    basis.monomials = monomials(basis.variables, 0:max_degree);
    basis.power_matrix = monomials_to_matrix(basis.monomials, basis.variables);
end